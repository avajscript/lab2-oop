package org.cst8288Lab2.database.student;

import org.cst8288Lab2.database.DBConnection;
import org.cst8288Lab2.database.student.StudentDao;
import org.cst8288Lab2.transferobjects.Student;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class StudentDaoImpl implements StudentDao {

    @Override
    public List<Student> getAllStudents() {
        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;
        ArrayList<Student> students = null;
        try {
            conn = DBConnection.getConnection();
            String query = "SELECT * from Student";
            pstmt = conn.prepareStatement(query);
            rs = pstmt.executeQuery();
            rs = pstmt.executeQuery();
            students = new ArrayList<Student>();
            while (rs.next()) {
                Student student = new Student();

                int studentID = rs.getInt("studentId");
                student.setStudentId(studentID);

                String firstName = rs.getString("firstName");
                student.setFirstName(firstName);

                String lastName = rs.getString("lastName");
                student.setLastName(lastName);
                students.add(student);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (rs != null) {
                    rs.close();
                }

                if (pstmt != null) {
                    pstmt.close();
                }

                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
        return students;
    }

    @Override
    public Student getStudentById(int studentId) {
        Connection con = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;
        Student student = null;

        try {
            con = DBConnection.getConnection();
            pstmt = con.prepareStatement(
                    "SELECT * FROM student WHERE StudentId = ?");
            pstmt.setInt(1, studentId);
            rs = pstmt.executeQuery();
            while (rs.next()) {
                student = new Student();
                student.setStudentId(rs.getInt("studentId"));
                student.setFirstName(rs.getString("firstName"));
                student.setLastName(rs.getString("lastName"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (rs != null) {
                    rs.close();
                }

                if (pstmt != null) {
                    pstmt.close();
                }

                if (con != null) {
                    con.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
        return student;
    }

    @Override
    public void addStudent(Student student) {

        Connection con = null;
        PreparedStatement pstmt = null;
        try {
            con = DBConnection.getConnection();

            // do not insert AuthorID, it is generated by Database
            pstmt = con.prepareStatement(
                    "INSERT INTO student (studentId, firstName, lastName) "
                            + "VALUES(?, ?, ?)");
            pstmt.setInt(1, student.getStudentId());
            pstmt.setString(2, student.getFirstName());
            pstmt.setString(3, student.getLastName());
            pstmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (pstmt != null) {
                    pstmt.close();
                }

                if (con != null) {
                    con.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }

    @Override
    public void updateStudent(Student student) {
        Connection con = null;
        PreparedStatement pstmt = null;

        try {
            con = DBConnection.getConnection();
            pstmt = con.prepareStatement(
                    "UPDATE student SET firstName = ?, "
                            + "lastName = ? WHERE studentId = ?");
            pstmt.setString(1, student.getFirstName());
            pstmt.setString(2, student.getLastName());
            pstmt.setInt(3, student.getStudentId());
            pstmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (pstmt != null) {
                    pstmt.close();
                }

                if (con != null) {
                    con.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }

    @Override
    public void deleteStudent(Student student) {
        Connection con = null;
        PreparedStatement pstmt = null;

        try {
            con = DBConnection.getConnection();
            pstmt = con.prepareStatement(
                    "DELETE FROM student WHERE studentId = ?");
            pstmt.setInt(1, student.getStudentId());
            pstmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (pstmt != null) {
                    pstmt.close();
                }

                if (con != null) {
                    con.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }

    public ArrayList<Student> getStudentsByFirstName(String firstName) {
        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;
        ArrayList<Student> students = null;
        try {
            conn = DBConnection.getConnection();
            pstmt = conn.prepareStatement("SELECT * FROM student WHERE firstName = ?");
            pstmt.setString(1, firstName);
            rs = pstmt.executeQuery();

            while (rs.next()) {
                Student student = new Student();

                String firstNameFromDb = rs.getString("firstName");
                student.setFirstName(firstNameFromDb);

                String lastName = rs.getString("lastName");
                student.setLastName(lastName);

                int studentId = rs.getInt("studentId");
                student.setStudentId(studentId);

                students.add(student);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (rs != null) {
                    rs.close();
                }

                if (pstmt != null) {
                    pstmt.close();
                }

                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
        return students;
    }

    @Override
    public void deleteAllStudents() {
        Connection conn = null;
        PreparedStatement pstmt = null;

        try {
            conn = DBConnection.getConnection();
            pstmt = conn.prepareStatement("DELETE FROM student WHERE TRUE");
            pstmt.executeUpdate();

        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (pstmt != null) {
                    pstmt.close();
                }

                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }
}
